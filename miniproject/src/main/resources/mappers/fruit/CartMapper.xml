<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.miniproject.dao.ICartDAO">
  	
  	<!-- 장바구니에 동일 상품이 존재하는지 확인 : 존재하면 개수 반환 -->
  	<select id="checkFruInCart" parameterType="hashmap"
  												  resultType="int">
  		SELECT COUNT(*)
  		FROM cart
  		WHERE fruNo=#{fruNo} AND memId=#{memId}
  	</select>
  	
  	<!-- 장바구니에 동일 상품이 존재하지 않으면 장바구니에 추가 -->
  	<!-- cartNo는 자동 증가하므로 입력하지 않아도 됨  -->
  	<insert id="insertCart" parameterType="com.miniproject.model.CartVO">
  		INSERT INTO cart(memId, fruNo, cartQty)
  		VALUES (#{memId}, #{fruNo}, #{cartQty})
  	</insert>
  	  	<!-- 장바구니에 동일 상품이 존재하지 않으면 장바구니에 추가 -->
  	<!-- cartNo는 자동 증가하므로 입력하지 않아도 됨  -->
  	<insert id="insertCartClick" parameterType="com.miniproject.model.CartVO">
  		INSERT INTO cart(memId, fruNo, cartQty)
  		VALUES (#{memId}, #{fruNo}, #{cartQty})
  	</insert>
  	
  	<!-- 장바구니에 동일 상품이 존재하면 해당 상품의 주문수량 변경 -->
  	<update id="updateQtyInCart" parameterType="com.miniproject.model.CartVO">
  		UPDATE cart
  		SET cartQty = cartQty + #{cartQty}
  		WHERE memId=#{memId} AND fruNo=#{fruNo}
  	</update>
  	
  	<!-- 장바구니 목록 출력 : product와 cart 테이블 조인해서 필요한 필드 반환  -->
  	<select id="cartList" parameterType="string"
  									 resultType="com.miniproject.model.CartVO">
  		SELECT c.cartNo, f.fruNo, f.fruImg, f.fruInfo,f.fruPrice , c.cartQty, c.memId
  		FROM fruit f, cart c
  		WHERE f.fruNo = c.fruNo AND c.memId =#{memId}
  		ORDER BY c.cartNo
  		
  		
  	</select>  	
  	
  	<!--  장바구니에서 선택된 상품 삭제 -->
  	<delete id="deleteCart" parameterType="string">
  		DELETE FROM cart WHERE cartNo = #{cartNo}
  	</delete>
  	
  	<!-- 주문서에 출력할 회원 정보 반환 -->
  	<select id="getMemberInfo" parameterType="string"
  												  resultType="com.miniproject.model.MemberVO">
  		SELECT memId, memName, memHP, memZipcode, memAddress1, memAddress2
  		FROM member
  		WHERE memId=#{memId}	
  	</select>
  	
  	<!--  장바구니 수정 : 장바구니 리스트에서 변경된 주문수량 업데이트 -->
   <update id="updateCart" parameterType="com.miniproject.model.CartVO">
   		UPDATE cart
   		SET cartQty=#{cartQty}
   		WHERE cartNo=#{cartNo}
   </update>
   
   <!-- 주문 정보 저장 -->
  <!--  <insert id="insertOrderInfo" 
   				parameterType="com.spring_boot.projectEx.model.OrderInfoVO">
   		INSERT INTO order_info (ordNo, memId, ordReceiver, ordRcvZipcode,
   													ordRcvAddress1, ordRcvAddress2, ordRcvPhone, 
   													ordRcvMsg, ordPay)
   		VALUES (#{ordNo},  #{memId}, #{ordReceiver}, #{ordRcvZipcode},
   						#{ordRcvAddress1},#{ordRcvAddress2},#{ordRcvPhone}, 
   						#{ordRcvMsg},#{ordPay})
   </insert> -->
   
   <!-- 주문 상품 내용 저장 : 장바구니 테이블에서 바로 가져와서 저장  -->
   <!-- ordNo와 memId는 파라미터로 받은 것임  -->
 <!--   <insert id="insertOrderFruit" parameterType="hashmap">
   		INSERT INTO order_fruit(ordNo, fruNo, ordQty)
   		SELECT #{ordNo}, fruNo, cartQty FROM cart WHERE memId=#{memId}
   </insert>
   
   주문 완료 후 해당 사용자의 장바구니 비우기 (삭제)
   <delete id="deleteCartAfterOrder" parameterType="string">
   		DELETE FROM cart
   		WHERE memId=#{memId}
   </delete>
   
    <delete id="deleteAllCart" parameterType="string">
   		DELETE FROM cart
   		WHERE memId=#{memId}
   </delete> -->
  </mapper>
  
  
  